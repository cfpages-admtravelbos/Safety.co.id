name: Update Clients v.5.2

on:
  push:
    paths:
      - .clients  # Trigger when the .clients file is modified
  workflow_dispatch:  # Allow manual triggering of the workflow

permissions:
  contents: write  # Grant write permissions to the repository contents

jobs:
  update_html_files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check if .clients file exists
        id: check_clients
        run: if [[ -f .clients ]]; then echo "exists=true" >> $GITHUB_ENV; else echo "exists=false" >> $GITHUB_ENV; fi

      - name: Abort if .clients file does not exist
        if: env.exists == 'false'
        run: echo "No .clients file found, aborting operation." && exit 1

      - name: Check if .clients file is empty
        if: env.exists == 'true'
        run: |
          if [[ ! -s .clients ]]; then
            echo "File is empty, nothing to do." && exit 0
          fi

      - name: Determine variable from .clients
        if: env.exists == 'true'
        run: |
          # Read the .clients file content
          LINE=$(cat .clients)

          # Initialize variables
          WAURL=""
          PHURL=""
          NAME=""
          PHONE=""

          # Split using '|'
          IFS='|' read -ra PARTS <<< "$LINE"

          # Identify each
          for PART in "${PARTS[@]}"; do
            if [[ $PART == https://* ]]; then
              if [[ $PART == *ðŸ’¬* ]]; then
                WAURL=$PART
              elif [[ $PART == *ðŸ“ž* ]]; then
                PHURL=$PART
              fi
            elif [[ $PART =~ ^[0-9\ ]+$ ]]; then
              PHONE=$PART
            else
              NAME=$PART
            fi
          done

          # Output variables
          echo "WAURL=$WAURL" >> $GITHUB_ENV
          echo "PHURL=$PHURL" >> $GITHUB_ENV
          echo "NAME=$NAME" >> $GITHUB_ENV
          echo "PHONE=$PHONE" >> $GITHUB_ENV

      - name: Debug extracted variables
        run: |
          echo "WAURL: $WAURL"
          echo "PHURL: $PHURL"
          echo "NAME: $NAME"
          echo "PHONE: $PHONE"

      - name: Update Clients
        if: env.exists == 'true'
        run: |
          # Function to escape special characters for sed
          escape_for_sed() {
            echo "$1" | sed -e 's/[]\/$*.^[]/\\&/g'
          }

          # Store the current values
          OLD_WAURL=$(grep -oP '(?<=class="whatsapp-floating"[^>]*href=")[^"]*' $(find . -name "*.html") | head -n1)
          OLD_PHURL=$(grep -oP '(?<=class="tlp-floating"[^>]*href=")[^"]*' $(find . -name "*.html") | head -n1)
          OLD_PHONE_NAME=$(grep -oP '(?<=<span[^>]*>)\d{4} \d{4}( \d{4})? \([^\)]+\)(?=</span>)' $(find . -name "*.html") | head -n1)

          echo "Old WAURL: $OLD_WAURL"
          echo "Old PHURL: $OLD_PHURL"
          echo "Old PHONE_NAME: $OLD_PHONE_NAME"

          # Escape special characters
          OLD_WAURL_ESCAPED=$(escape_for_sed "$OLD_WAURL")
          OLD_PHURL_ESCAPED=$(escape_for_sed "$OLD_PHURL")
          OLD_PHONE_NAME_ESCAPED=$(escape_for_sed "$OLD_PHONE_NAME")
          NEW_WAURL_ESCAPED=$(escape_for_sed "$WAURL")
          NEW_PHURL_ESCAPED=$(escape_for_sed "$PHURL")
          NEW_PHONE_NAME_ESCAPED=$(escape_for_sed "${PHONE} (${NAME})")

          # Update files
          find . -name "*.html" -type f | while read -r file; do
            if [ -n "$OLD_WAURL" ] && [ -n "$WAURL" ]; then
              sed -i "s|$OLD_WAURL_ESCAPED|$NEW_WAURL_ESCAPED|g" "$file"
            fi
            if [ -n "$OLD_PHURL" ] && [ -n "$PHURL" ]; then
              sed -i "s|$OLD_PHURL_ESCAPED|$NEW_PHURL_ESCAPED|g" "$file"
            fi
            if [ -n "$OLD_PHONE_NAME" ] && [ -n "$PHONE" ] && [ -n "$NAME" ]; then
              sed -i "s|$OLD_PHONE_NAME_ESCAPED|$NEW_PHONE_NAME_ESCAPED|g" "$file"
            fi
          done

      - name: Show git diff
        run: git diff

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          if ! git diff --quiet; then
            git add .
            git commit -m "Update URLs: WAURL: ${WAURL}, PHURL: ${PHURL}, Phone: ${PHONE}, Name: ${NAME}"
            git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}
            git push origin HEAD:main
          else
            echo "No changes to commit."
          fi
