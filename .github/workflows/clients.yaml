name: Update Clients v.7

on:
  push:
    paths:
      - .clients  # Trigger when the .clients file is modified
  workflow_dispatch:  # Allow manual triggering of the workflow

permissions:
  contents: write  # Grant write permissions to the repository contents

jobs:
  update_html_files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check if .clients file exists
        id: check_clients
        run: if [[ -f .clients ]]; then echo "exists=true" >> $GITHUB_ENV; else echo "exists=false" >> $GITHUB_ENV; fi

      - name: Abort if .clients file does not exist
        if: env.exists == 'false'
        run: echo "No .clients file found, aborting operation." && exit 1

      - name: Check if .clients file is empty
        if: env.exists == 'true'
        run: |
          if [[ ! -s .clients ]]; then
            echo "File is empty, nothing to do." && exit 0
          fi

      - name: Determine variable from .clients
        if: env.exists == 'true'
        run: |
          # Read the .clients file content
          LINE=$(cat .clients)

          # Initialize variables
          WAURL=""
          PHURL=""
          NAME=""
          PHONE=""

          # Split using '|'
          IFS='|' read -ra PARTS <<< "$LINE"

          # Identify each
          for PART in "${PARTS[@]}"; do
            if [[ $PART == https://* ]]; then
              if [[ $PART == *:speech_balloon:* ]]; then
                WAURL=$PART
              elif [[ $PART == *:telephone_receiver:* ]]; then
                PHURL=$PART
              fi
            elif [[ $PART =~ ^[0-9\ ]+$ ]]; then
              PHONE=$PART
            else
              NAME=$PART
            fi
          done

          # Output for debugging purposes
          echo "Extracted values:"
          echo "WAURL=${WAURL}"
          echo "PHURL=${PHURL}"
          echo "NAME=${NAME}"
          echo "PHONE=${PHONE}"
      
          # Output variables
          echo "WAURL=$WAURL" >> $GITHUB_ENV
          echo "PHURL=$PHURL" >> $GITHUB_ENV
          echo "NAME=$NAME" >> $GITHUB_ENV
          echo "PHONE=$PHONE" >> $GITHUB_ENV

      - name: Update Clients
        if: env.exists == 'true'
        run: |
          # Use the variables set previously from GITHUB_ENV
          for file in $(find . -name '*.html'); do
            echo "Processing $file"

            # Backup the file for comparison
            cp "$file" "${file}.bak"

            # Update the phone number and name in span
            if [ -n "${PHONE}" ] && [ -n "${NAME}" ]; then
              echo "Attempting to replace span text in: $file"
              echo "Sed Command: sed -i -E 's@(<span[^>]*>)\\d{4} \\d{4}( \\d{4})? \\([^)]+\\)(</span>)@\\1${PHONE} (${NAME})\\2@' \"$file\""

              # Execute the sed command for replacement
              sed -i -E "s@(<span[^>]*>)\d{4} \d{4}( \d{4})? \([^\)]+\)(</span>)@\1${PHONE} (${NAME})\2@" "$file"

              # Show the result for change
              if ! diff -q "${file}.bak" "$file"; then
                echo "Changes detected in $file:"
                diff "${file}.bak" "$file"
              else
                echo "No changes detected in the content of $file after sed."
              fi
            fi
          done
      
          # Verify changes and commit if necessary
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git diff --name-only
          if ! git diff --quiet; then
            git add .
            git commit -m "Update URLs: WAURL: ${WAURL}, PHURL: ${PHURL}, Phone: ${PHONE}, Name: ${NAME}"
      
            # Push changes
            git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}
            git push origin HEAD:main
          else
            echo "No changes to commit."
          fi
